name: apply

on:
  push:
    branches:
      - main
    paths:
      - "terraform/*.tf"
      - "src/**.py"
      - ".github/workflows/apply.yml"

permissions:
  id-token: write
  contents: read

jobs:
  apply:
    name: Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ACTIONS_ASSUME_ROLE_ARN }}
          role-session-name: github-actions-terraform-apply-session
          aws-region: ap-northeast-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.2

      - name: Terraform Init
        run: terraform init -backend-config "bucket=${{ secrets.TF_BACKEND_S3_BUCKET }}"
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve -var "assume_role_arn=${{ secrets.TF_ASSUME_ROLE_ARN }}"
        working-directory: ./terraform

      - name: Output ECR Login Address
        id: ecr_address
        run: echo "ECR_REGISTRY=$(terraform output -raw ecr_address)" >> $GITHUB_ENV
        working-directory: ./terraform

      - name: Output ECR Repository URL
        id: ecr_repository_url
        run: echo "ECR_REPOSITORY_URL=$(terraform output -raw ecr_repository_url)" >> $GITHUB_ENV
        working-directory: ./terraform

      - name: Output Git Commit Short SHA
        id: short_sha
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - uses: docker/setup-buildx-action@v1

      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ECR_PUSH_ASSUME_ROLE_ARN }}
          role-session-name: github-actions-ecr-push-session
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${ECR_REPOSITORY_URL}:latest
            ${ECR_REPOSITORY_URL}:${SHORT_SHA}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
